# Generated by Django 5.2.5 on 2025-08-07 16:13

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('product_name', models.CharField(help_text='Display name of the product', max_length=100)),
                ('product_code', models.CharField(help_text='Unique identifier for the product (min 3 chars)', max_length=50, unique=True, validators=[django.core.validators.MinLengthValidator(3)])),
                ('description', models.TextField(blank=True, help_text='Detailed product information')),
                ('unit_of_measure', models.CharField(default='pcs', help_text='Measurement unit (e.g., pcs, kg, box)', max_length=20)),
                ('current_stock', models.DecimalField(decimal_places=2, default=0, editable=False, help_text='Automatically calculated stock level', max_digits=10)),
                ('unit_price', models.DecimalField(decimal_places=2, default=0.0, help_text='Current unit price of the product', max_digits=10)),
            ],
            options={
                'verbose_name': 'Product',
                'verbose_name_plural': 'Products',
                'ordering': ['product_name'],
            },
        ),
        migrations.CreateModel(
            name='Transaction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('transaction_date', models.DateTimeField(auto_now_add=True)),
                ('transaction_type', models.CharField(choices=[('purchase', 'Purchase'), ('sale', 'Sale'), ('return', 'Return'), ('adjustment', 'Adjustment')], help_text='Type of inventory transaction', max_length=20)),
                ('reference_number', models.CharField(blank=True, help_text='External reference number (invoice, PO, etc.)', max_length=50)),
                ('notes', models.TextField(blank=True, help_text='Additional information about the transaction')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='inventory_transactions', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Inventory Transaction',
                'verbose_name_plural': 'Inventory Transactions',
                'db_table': 'inventory_transaction',
                'ordering': ['-transaction_date'],
            },
        ),
        migrations.CreateModel(
            name='TransactionDetail',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.DecimalField(decimal_places=2, help_text='Quantity of product in this transaction', max_digits=10, validators=[django.core.validators.MinValueValidator(0.01)])),
                ('unit_price', models.DecimalField(blank=True, decimal_places=2, help_text='Unit price at time of transaction (optional)', max_digits=10, null=True)),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='transaction_details', to='inventory.product')),
                ('transaction', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='details', to='inventory.transaction')),
            ],
            options={
                'verbose_name': 'Transaction Detail',
                'verbose_name_plural': 'Transaction Details',
                'db_table': 'inventory_transactiondetail',
            },
        ),
        migrations.AddField(
            model_name='transaction',
            name='products',
            field=models.ManyToManyField(related_name='transactions', through='inventory.TransactionDetail', to='inventory.product'),
        ),
        migrations.AddConstraint(
            model_name='transactiondetail',
            constraint=models.UniqueConstraint(fields=('transaction', 'product'), name='unique_transaction_product'),
        ),
    ]
